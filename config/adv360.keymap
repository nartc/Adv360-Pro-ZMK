
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp TILDE     &kp N1        &kp N2    &kp N3     &kp N4            &kp N5                &to 3                     &none    &kp N6     &kp N7     &kp N8     &kp N9     &kp N0  &kp MINUS
   &kp TAB      &kp Q         &kp W     &kp E      &kp R             &kp T                &none                     &none     &kp Y      &kp U      &kp I      &kp O      &kp P   &kp BSLH
   &kp ESC      &kp A         &kp S     &kp D      &kp F             &kp G                &mo 2  &kp LG(LC(LS(NUMBER_4)))  &kp LALT                         &kp LGUI  &kp RCTRL      &none     &kp H          &kp J      &kp K    &kp L  &kp SEMI    &kp SQT
 &kp LSHFT      &kp Z         &kp X     &kp C      &kp V             &kp B                &none                     &none  &kp HOME      &none      &none  &kp PG_UP      &none      &none     &kp N          &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
 &kp LCTRL  &kp LCTRL  &kp LEFT_ALT  &kp LEFT  &kp RIGHT  &kp LEFT_COMMAND            &kp EQUAL               &lt 1 SPACE     &mo 3  &kp SPACE  &kp ENTER     &kp UP   &kp DOWN   &kp LBKT  &kp RBKT  &kp BACKSPACE
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6             &to 0   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                   &trans   &trans    &none  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none   &trans    &none    &none  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans   &trans   &trans   &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &to 0       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

        layer_navigation {
            bindings = <
 &trans              &trans               &trans         &trans  &trans                    &trans                     &to 0     &trans  &trans       &trans        &trans  &trans  &trans  &trans
 &trans              &trans               &trans         &trans  &trans                    &trans                    &trans     &trans  &trans  &kp PAGE_UP  &kp UP_ARROW  &trans  &trans  &trans
 &trans  &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &kp PAGE_DOWN  &trans  &kp LG(LS(LEFT_BRACKET))                    &trans     &trans  &trans                             &trans  &trans  &trans  &kp LG(LS(RIGHT_BRACKET))  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans
 &trans              &trans               &trans         &trans  &trans                    &trans                    &trans     &trans  &trans       &trans        &trans  &trans  &trans  &trans                     &trans    &trans          &trans     &trans  &trans  &trans
 &trans              &trans               &trans         &trans  &trans                    &trans            &macro_arrowfn  &kp SPACE  &trans       &trans        &trans  &trans  &trans  &trans                     &trans    &trans
            >;
        };

    };
};
